* {
    font-family: Raleway;
    /* 字体名 */
}

html, body {
  background-color: #333;
  height: 100%;
  margin: 0;
}


.grid-container {
    display: grid; 
    /* display : grid => default */

    /* 当你想要分别两列为200px和100px时： */
    /* grid-template-columns: 200px 100px;  */

    /* 当你想要分别两列自适应并且是倍数时： */
    /* grid-template-columns: 2fr 1fr; */

    /* 当你想要三列一样的固定宽度的模块时： */
    /* grid-template-columns: repeat(3, 300px); */

    /* 当你想要三列自适应模块时： */
    /* grid-template-columns: repeat(3, 1fr); */

    /* Row 同理：
    当你想要行宽为200px和100px时： */
    /* grid-template-rows: 200px 100px 200px 100px 200px; */

    /* 同时设定行，列： */
    grid-template-columns: repeat(3, 1fr);
    /* grid-template-rows: repeat(2, 100px); */
    /* 当你不确定自己的行数或列数时： */
    grid-auto-rows: 150px;
    /* 同时你只想改变第一行/列的大小时,只需要写下这个值即可： */
    grid-template-rows: 200px;



}


.grid-item {
  position: relative;
  font-size: 25px;
  padding: 20px;
  padding-top: 50px;
  background-color: #379AD6;
  color: #222;
  border: 1px solid white;
}

.grid-item:nth-child(odd) {
  /* 根据当前元素的兄弟元素按照位置顺序排序，括号表达需要匹配到的值
  想要匹配到奇数也可以写 “2n+1” */
  background-color: #5bbdfa;
}

.grid-item::before {
/* before创建一个伪元素，将成为匹配选中元素的第一个子元素，
通过content属性为一个元素添加修饰性内容 */
  content: 'Grid Item';
  position: absolute;
  font-size: 25px;
  font-weight: bold;
  top: 10px;
  left: 15px;
}

.grid-item::after {
  position: absolute;
  font-size: 25px;
  top: 10px;
  right: 15px;
  font-weight: bold;
}

.grid-item1 {

}

.grid-item2 {
    
}

.grid-item3 {
    
}

.grid-item4 {
    
}

.grid-item5 {
    
}

.grid-item6 {
    
}